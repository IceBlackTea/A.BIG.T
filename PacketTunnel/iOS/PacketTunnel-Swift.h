// Generated by Apple Swift version 2.3 (swiftlang-800.10.11 clang-800.0.36)
#pragma clang diagnostic push

#if defined(__has_include) && __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <objc/NSObject.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if defined(__has_include) && __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus) || __cplusplus < 201103L
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif

#if defined(__has_attribute) && __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if defined(__has_attribute) && __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if defined(__has_attribute) && __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if defined(__has_attribute) && __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name) enum _name : _type _name; enum SWIFT_ENUM_EXTRA _name : _type
# if defined(__has_feature) && __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME) SWIFT_ENUM(_type, _name)
# endif
#endif
#if defined(__has_feature) && __has_feature(modules)
@import ObjectiveC;
@import Dispatch;
@import Foundation;
@import Security;
@import NetworkExtension;
@import SystemConfiguration;
#endif

#import "/Users/abigt/github/surf/PacketTunnel/iOS/PacketTunnel-Bridging-Header.h"

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
@class Reachability;

SWIFT_CLASS("_TtC16PacketTunnel_iOS11AxEnvHelper")
@interface AxEnvHelper : NSObject
+ (Reachability * _Nonnull)reachAiblity;
+ (void)setReachAiblity:(Reachability * _Nonnull)value;
+ (NSString * _Nonnull)platform;
+ (NSString * _Nonnull)systemName;
+ (NSString * _Nonnull)deviceName;
+ (NSString * _Nonnull)systemVersion;
+ (NSString * _Nonnull)appVersion;
+ (NSString * _Nonnull)appBuild;
+ (NSString * _Nonnull)deviceModel;
+ (NSString * _Nonnull)deviceLocalizedModel;
+ (NSString * _Nonnull)phoneIdentifier;
+ (NSString * _Nonnull)appIdentifier;
+ (NSString * _Nonnull)screenSize;
+ (NSString * _Nonnull)carrier;
+ (NSString * _Nonnull)networkType;
+ (NSDictionary<NSString *, NSString *> * _Nonnull)infoDict;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class NSURL;
@class NSDate;
enum AxLoggerLevel : NSInteger;

SWIFT_CLASS("_TtC16PacketTunnel_iOS8AxLogger")
@interface AxLogger : NSObject
+ (NSURL * _Nonnull)groupURL;
+ (void)setGroupURL:(NSURL * _Nonnull)value;
+ (void)closeLogging;
+ (void)resetLogFile;
+ (void)openLogging:(NSDate * _Nonnull)date;
+ (enum AxLoggerLevel)logleve;
+ (void)setLogleve:(enum AxLoggerLevel)value;
+ (void)log:(NSString * _Nonnull)msg level:(enum AxLoggerLevel)level category:(NSString * _Nonnull)category file:(NSString * _Nonnull)file line:(NSInteger)line ud:(NSDictionary<NSString *, NSString *> * _Nonnull)ud tags:(NSArray<NSString *> * _Nonnull)tags time:(NSDate * _Nonnull)time;
+ (void)enableConsole:(BOOL)enable;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

typedef SWIFT_ENUM(NSInteger, AxLoggerLevel) {
    AxLoggerLevelInfo = 0,
    AxLoggerLevelNotify = 1,
    AxLoggerLevelError = 2,
    AxLoggerLevelWarning = 3,
    AxLoggerLevelTrace = 4,
    AxLoggerLevelVerbose = 5,
    AxLoggerLevelDebug = 6,
};

@class GCDAsyncSocket;
@class NSError;
@class NSData;
@protocol ConnectorDelegate;

SWIFT_CLASS("_TtC16PacketTunnel_iOS9Connector")
@interface Connector : NSObject <GCDAsyncSocketDelegate>
@property (nonatomic, weak) id <ConnectorDelegate> _Nullable delegate;
@property (nonatomic, copy) NSString * _Nonnull targetHost;
@property (nonatomic) uint16_t targetPort;
@property (nonatomic, copy) NSString * _Nonnull remoteIPaddress;
@property (nonatomic, strong) GCDAsyncSocket * _Nullable socket;
@property (nonatomic) BOOL socks_reading;
@property (nonatomic) BOOL socks_writing;
@property (nonatomic, strong) dispatch_queue_t _Nullable socket_Queue;
@property (nonatomic) NSInteger connectTime;
- (NSString * _Nullable)interfaceAddr;
@property (nonatomic) BOOL shoudClose;
@property (nonatomic) NSInteger cID;
@property (nonatomic, copy) NSString * _Nonnull cIDString;
@property (nonatomic) BOOL isConnected;
@property (nonatomic) BOOL isDisconnected;
- (dispatch_queue_t _Nullable)socketQueue;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithPolicy:(NSString * _Nonnull)policy OBJC_DESIGNATED_INITIALIZER;
- (void)cIDFunc;
- (BOOL)socketDead;
- (void)disconnectWithError:(NSError * _Nonnull)error;
- (void)socketDidDisconnect:(GCDAsyncSocket * _Nonnull)sock withError:(NSError * _Nullable)err;
- (void)writeData:(NSData * _Nonnull)d timeout:(double)timeout tag:(int64_t)tag;
- (void)socket:(GCDAsyncSocket * _Nonnull)sock didWriteDataWithTag:(NSInteger)tag;
- (void)socket:(GCDAsyncSocket * _Nonnull)sock didReadData:(NSData * _Nonnull)data withTag:(NSInteger)tag;
- (void)start;
- (void)readDataWithTimeout:(double)timeout length:(NSUInteger)length tag:(long)tag;
- (void)socket:(GCDAsyncSocket * _Nonnull)sock didConnectToHost:(NSString * _Nonnull)host port:(uint16_t)port;
- (void)readDataToLength:(NSUInteger)length withTimeout:(NSTimeInterval)timeout tag:(NSInteger)tag;
- (NSTimeInterval)socket:(GCDAsyncSocket * _Nonnull)sock shouldTimeoutReadWithTag:(NSInteger)tag elapsed:(NSTimeInterval)elapsed bytesDone:(NSUInteger)length;
- (NSTimeInterval)socket:(GCDAsyncSocket * _Nonnull)sock shouldTimeoutWriteWithTag:(NSInteger)tag elapsed:(NSTimeInterval)elapsed bytesDone:(NSUInteger)length;
@end


SWIFT_PROTOCOL("_TtP16PacketTunnel_iOS17ConnectorDelegate_")
@protocol ConnectorDelegate
- (void)connector:(Connector * _Nonnull)connector didReadData:(NSData * _Nonnull)data withTag:(int64_t)tag;
- (void)connectorDidDisconnect:(Connector * _Nonnull)connector withError:(NSError * _Nonnull)withError;
- (void)connector:(Connector * _Nonnull)connector didWriteDataWithTag:(int64_t)tag;
- (void)connectorDidSetupFailed:(Connector * _Nonnull)connector withError:(NSError * _Nonnull)withError;
- (void)connectorDidBecomeAvailable:(Connector * _Nonnull)connector;
- (NSTimeInterval)connector:(Connector * _Nonnull)connector shouldTimeoutReadWithTag:(NSInteger)tag elapsed:(NSTimeInterval)elapsed bytesDone:(NSUInteger)length;
@end


SWIFT_CLASS("_TtC16PacketTunnel_iOS9DNSPacket")
@interface DNSPacket : NSObject
@property (nonatomic) uint16_t identifier;
@property (nonatomic, copy) NSArray<NSString *> * _Nonnull queryDomains;
@property (nonatomic, copy) NSDictionary<NSString *, NSString *> * _Nonnull answerDomains;
@property (nonatomic, strong) NSData * _Nonnull rawData;
@property (nonatomic) char qr;
@property (nonatomic) uint16_t count;
@property (nonatomic) uint16_t qType;
@property (nonatomic) uint16_t qClass;
@property (nonatomic) uint16_t reqCount;
@property (nonatomic) uint16_t answerCount;
@property (nonatomic, copy) NSArray<NSString *> * _Nonnull ipString;
@property (nonatomic) BOOL finished;
- (nonnull instancetype)initWithData:(NSData * _Nonnull)data OBJC_DESIGNATED_INITIALIZER;
+ (NSString * _Nonnull)findLabel:(uint8_t const * _Null_unspecified)ptr0;
+ (NSData * _Nonnull)genPacketData:(NSString * _Nonnull)ip domain:(NSString * _Nonnull)domain identifier:(uint16_t)identifier;
@end


SWIFT_CLASS("_TtC16PacketTunnel_iOS15DirectConnector")
@interface DirectConnector : Connector
@property (nonatomic, copy) NSString * _Nullable interfaceName;
- (void)socket:(GCDAsyncSocket * _Nonnull)sock didReadData:(NSData * _Nonnull)data withTag:(NSInteger)tag;
- (void)socket:(GCDAsyncSocket * _Nonnull)sock didWriteDataWithTag:(NSInteger)tag;
- (void)beginRead;
- (void)socket:(GCDAsyncSocket * _Null_unspecified)sock didWritePartialDataOfLength:(NSUInteger)partialLength tag:(NSInteger)tag;
- (void)socketDidCloseReadStream:(GCDAsyncSocket * _Null_unspecified)sock;
- (void)socketDidDisconnect:(GCDAsyncSocket * _Nonnull)sock withError:(NSError * _Null_unspecified)err;
- (void)start;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithPolicy:(NSString * _Nonnull)policy OBJC_DESIGNATED_INITIALIZER;
@end

@class NSNumber;

SWIFT_CLASS("_TtC16PacketTunnel_iOS14ProxyConnector")
@interface ProxyConnector : Connector
@property (nonatomic) BOOL tlsSupport;
@property (nonatomic, readonly, copy) NSArray<NSNumber *> * _Nonnull acceptableCipherSuites;
@property (nonatomic, copy) NSString * _Nonnull pFrontAddress;
@property (nonatomic) uint16_t pFrontPort;
- (void)startTLS;
- (void)socket:(GCDAsyncSocket * _Null_unspecified)sock didReceiveTrust:(SecTrustRef _Null_unspecified)trust completionHandler:(void (^ _Null_unspecified)(BOOL))completionHandler;
- (void)start;
- (void)socket:(GCDAsyncSocket * _Nonnull)sock didConnectToHost:(NSString * _Null_unspecified)host port:(uint16_t)port;
@end

@class NSMutableData;

SWIFT_CLASS("_TtC16PacketTunnel_iOS21HTTPAesProxyConnector")
@interface HTTPAesProxyConnector : ProxyConnector
@property (nonatomic, copy) NSString * _Nullable interfaceName;
@property (nonatomic) BOOL httpConnected;
@property (nonatomic, strong) NSMutableData * _Nonnull headerData;
- (void)start;
- (void)sendReq;
- (NSInteger)recvHeaderData:(NSData * _Nonnull)data;
- (void)socket:(GCDAsyncSocket * _Nonnull)sock didReadData:(NSData * _Nonnull)data withTag:(NSInteger)tag;
- (void)socket:(GCDAsyncSocket * _Null_unspecified)sock didConnectToHost:(NSString * _Null_unspecified)host port:(uint16_t)port;
- (void)socket:(GCDAsyncSocket * _Nonnull)sock didWriteDataWithTag:(NSInteger)tag;
- (void)beginRead;
- (void)socket:(GCDAsyncSocket * _Null_unspecified)sock didWritePartialDataOfLength:(NSUInteger)partialLength tag:(NSInteger)tag;
- (void)socketDidCloseReadStream:(GCDAsyncSocket * _Null_unspecified)sock;
- (void)writeData:(NSData * _Nonnull)d timeout:(double)timeout tag:(int64_t)tag;
@end


SWIFT_CLASS("_TtC16PacketTunnel_iOS18HTTPProxyConnector")
@interface HTTPProxyConnector : ProxyConnector
@property (nonatomic) BOOL httpConnected;
@property (nonatomic, strong) NSMutableData * _Nonnull headerData;
- (void)start;
- (void)sendReq;
- (NSInteger)recvHeaderData:(NSData * _Nonnull)data;
- (void)socketDidSecure:(GCDAsyncSocket * _Null_unspecified)sock;
- (void)socket:(GCDAsyncSocket * _Nonnull)sock didReadData:(NSData * _Nonnull)data withTag:(NSInteger)tag;
- (void)socket:(GCDAsyncSocket * _Nonnull)sock didConnectToHost:(NSString * _Null_unspecified)host port:(uint16_t)port;
- (void)socket:(GCDAsyncSocket * _Nonnull)sock didWriteDataWithTag:(NSInteger)tag;
- (void)beginRead;
- (void)socket:(GCDAsyncSocket * _Null_unspecified)sock didWritePartialDataOfLength:(NSUInteger)partialLength tag:(NSInteger)tag;
- (void)socketDidCloseReadStream:(GCDAsyncSocket * _Null_unspecified)sock;
- (void)writeData:(NSData * _Nonnull)d timeout:(double)timeout tag:(int64_t)tag;
@end


SWIFT_CLASS("_TtC16PacketTunnel_iOS10IPv4Packet")
@interface IPv4Packet : NSObject
@property (nonatomic) uint8_t proto;
@property (nonatomic, readonly, strong) NSData * _Nullable srcIP;
@property (nonatomic, readonly, strong) NSData * _Nonnull _rawData;
@property (nonatomic, readonly, strong) NSData * _Nullable destinationIP;
@property (nonatomic) int32_t headerLength;
@property (nonatomic, readonly) int32_t payloadLength;
- (nonnull instancetype)initWithPacketData:(NSData * _Nonnull)PacketData OBJC_DESIGNATED_INITIALIZER;
- (NSData * _Nonnull)payloadData;
@property (nonatomic, readonly, copy) NSString * _Nonnull debugDescription;
@end


@interface NSData (SWIFT_EXTENSION(PacketTunnel_iOS))
- (NSData * _Nonnull)hmacsha1:(NSData * _Nonnull)keyData;
@end


@interface NSData (SWIFT_EXTENSION(PacketTunnel_iOS))
@property (nonatomic, readonly, strong) NSData * _Null_unspecified md5;
@end


@interface NSData (SWIFT_EXTENSION(PacketTunnel_iOS))
@property (nonatomic, readonly, strong) NSData * _Nonnull md5x;
@property (nonatomic, readonly, strong) NSData * _Nonnull sha1;
@property (nonatomic, readonly, strong) NSData * _Nonnull sha224;
@property (nonatomic, readonly, strong) NSData * _Nonnull sha256;
@property (nonatomic, readonly, strong) NSData * _Nonnull sha384;
@property (nonatomic, readonly, strong) NSData * _Nonnull sha512;
@end


@interface NSMutableData (SWIFT_EXTENSION(PacketTunnel_iOS))
@end


@interface NSNumber (SWIFT_EXTENSION(PacketTunnel_iOS))
@property (nonatomic, readonly) BOOL isBool;
@end


@interface NSString (SWIFT_EXTENSION(PacketTunnel_iOS))
- (uint64_t)fileSize;
- (BOOL)fileExist;
- (BOOL)dirCreate;
- (BOOL)fileDelete;
@end

@class UDPPacket;

SWIFT_CLASS("_TtC16PacketTunnel_iOS17OutgoingConnector")
@interface OutgoingConnector : NSObject
@property (nonatomic, copy) NSString * _Nullable identifier;
@property (nonatomic, strong) NSData * _Nullable clientAddress;
@property (nonatomic, strong) NSData * _Nullable dstAddress;
@property (nonatomic, strong) NSDate * _Nonnull activeTime;
@property (nonatomic, readonly) NSTimeInterval idel;
- (BOOL)idleTooLong;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithConnectionIdentifier:(NSString * _Nonnull)connectionIdentifier OBJC_DESIGNATED_INITIALIZER;
- (void)addQueryWithPacket:(UDPPacket * _Null_unspecified)p;
@end

@class NWPath;

SWIFT_CLASS("_TtC16PacketTunnel_iOS20PacketTunnelProvider")
@interface PacketTunnelProvider : NEPacketTunnelProvider
@property (nonatomic, copy) NSString * _Nullable dnsServer;
@property (nonatomic, copy) void (^ _Nullable pendingStartCompletion)(NSError * _Nullable);
@property (nonatomic, readonly, strong) dispatch_queue_t _Nonnull tunQueue;
@property (nonatomic, copy) void (^ _Nullable pendingStopCompletion)(void);
@property (nonatomic, strong) NWPath * _Nullable lastPath;
@property (nonatomic) NSInteger startTimes;
@property (nonatomic, strong) NSDate * _Nonnull startDate;
- (NSString * _Nullable)getPasswordWithPersistentReference:(NSData * _Nonnull)persistentReference;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (void)cancel;
- (void)resume;
- (void)startWithInterval:(double)interval;
- (NSString * _Nonnull)ipString:(uint32_t)ip;
- (void)prepareTunnelNetworkSettings:(BOOL)reset;
- (void)vpnStartFinish;
- (void)observeValueForKeyPath:(NSString * _Nullable)keyPath ofObject:(id _Nullable)object change:(NSDictionary<NSString *, id> * _Nullable)change context:(void * _Null_unspecified)context;
- (void)networkchanged;
- (void)writestart;
- (void)loadConfig;
- (void)startTunnelWithOptions:(NSDictionary<NSString *, NSObject *> * _Nullable)options completionHandler:(void (^ _Nonnull)(NSError * _Nullable))completionHandler;
- (void)startHandlingPackets;
- (void)handlePackets:(NSArray<NSData *> * _Nonnull)packets protocols:(NSArray<NSNumber *> * _Nonnull)protocols;

/// Write packets and associated protocols to the UTUN interface.
- (void)processPackets:(NSArray<NSData *> * _Nonnull)packets protocols:(NSArray<NSNumber *> * _Nonnull)protocols;
- (void)stopABigT;
- (void)stopTunnelWithReason:(NEProviderStopReason)reason completionHandler:(void (^ _Nonnull)(void))completionHandler;
- (void)logStopReason:(NEProviderStopReason)reason;
- (void)sleepWithCompletionHandler:(void (^ _Nonnull)(void))completionHandler;
- (void)wake;

/// Handle IPC messages from the app.
- (void)handleAppMessage:(NSData * _Nonnull)messageData completionHandler:(void (^ _Nullable)(NSData * _Nullable))completionHandler;
- (void)serverDidQuery:(OutgoingConnector * _Nonnull)targetTunnel data:(NSData * _Nonnull)data close:(BOOL)close;
- (void)serverDidClose:(OutgoingConnector * _Nonnull)targetTunnel;
- (void)writeDatagrams:(NSData * _Nonnull)packets proto:(int32_t)proto;
@end


@class NSNotificationCenter;

SWIFT_CLASS("_TtC16PacketTunnel_iOS12Reachability")
@interface Reachability : NSObject
@property (nonatomic, copy) void (^ _Nullable whenReachable)(Reachability * _Nonnull);
@property (nonatomic, copy) void (^ _Nullable whenUnreachable)(Reachability * _Nonnull);
@property (nonatomic) BOOL reachableOnWWAN;
@property (nonatomic, strong) NSNotificationCenter * _Nonnull notificationCenter;
@property (nonatomic, readonly, copy) NSString * _Nonnull currentReachabilityString;
- (nonnull instancetype)initWithReachabilityRef:(SCNetworkReachabilityRef _Nonnull)reachabilityRef OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithHostname:(NSString * _Nonnull)hostname error:(NSError * _Nullable * _Null_unspecified)error;
+ (Reachability * _Nullable)reachabilityForInternetConnectionAndReturnError:(NSError * _Nullable * _Null_unspecified)error;
+ (Reachability * _Nullable)reachabilityForLocalWiFiAndReturnError:(NSError * _Nullable * _Null_unspecified)error;
- (BOOL)startNotifierAndReturnError:(NSError * _Nullable * _Null_unspecified)error;
- (void)stopNotifier;
- (BOOL)isReachable;
- (BOOL)isReachableViaWWAN;
- (BOOL)isReachableViaWiFi;
- (BOOL)isConnectionOnTrafficOrDemand:(SCNetworkReachabilityFlags)flags;
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
@end


SWIFT_CLASS("_TtC16PacketTunnel_iOS13TUNConnection")
@interface TUNConnection : NSObject
@property (nonatomic) BOOL forceSend;
@property (nonatomic) BOOL closeSocketAfterRead;
@end

@class NSLock;
@class SFTCPConnectionManager;

SWIFT_CLASS("_TtC16PacketTunnel_iOS12SFConnection")
@interface SFConnection : TUNConnection <ConnectorDelegate>
@property (nonatomic) SFPcb _Null_unspecified pcb;
@property (nonatomic, readonly, strong) NSLock * _Nonnull critLock;
@property (nonatomic, weak) SFTCPConnectionManager * _Nullable manager;
@property (nonatomic, strong) Connector * _Nullable connector;
@property (nonatomic, copy) NSArray<NSData *> * _Nonnull bufArray;
@property (nonatomic, strong) NSMutableData * _Nonnull socks_recv_bufArray;
@property (nonatomic) NSInteger socks_sendout_length;
@property (nonatomic) BOOL connectorReading;
@property (nonatomic) BOOL pendingConnection;
@property (nonatomic) int64_t tag;
@property (nonatomic) NSInteger buf_used;
@property (nonatomic) NSInteger rTag;
@property (nonatomic, copy) NSString * _Nonnull cIDString;
@property (nonatomic) int64_t sendingTag;
@property (nonatomic) BOOL forceClose;
- (NSInteger)sendBufferSize;
- (nonnull instancetype)initWithTcp:(SFPcb _Null_unspecified)tcp host:(uint32_t)host port:(uint16_t)port m:(SFTCPConnectionManager * _Nonnull)m OBJC_DESIGNATED_INITIALIZER;
- (void)cIDFunc;
- (BOOL)shouldRemovDeadClient;
- (void)showLog;
- (dispatch_queue_t _Nonnull)socketQueue;
- (dispatch_queue_t _Nonnull)delegateQueue;
- (BOOL)genPolicy:(NSString * _Nonnull)dest useragent:(NSString * _Nonnull)useragent;
- (void)findIPaddress;
- (void)findIPAddress2;
- (void)findIPRule:(NSString * _Nonnull)ip;
- (void)checkStatus;
- (void)configConnection;
- (void)findProxy;
- (void)configLwip;
- (void)setUpConnector;
- (void)connection:(NSTimeInterval)timeout;
- (void)byebyeRequest;
- (void)connector:(Connector * _Nonnull)connector didReadData:(NSData * _Nonnull)data withTag:(int64_t)tag;
- (void)connectorDidDisconnect:(Connector * _Nonnull)connector withError:(NSError * _Nonnull)withError;
- (void)connector:(Connector * _Nonnull)connector didWriteDataWithTag:(int64_t)_tag;
- (NSTimeInterval)connector:(Connector * _Nonnull)connector shouldTimeoutReadWithTag:(NSInteger)tag elapsed:(NSTimeInterval)elapsed bytesDone:(NSUInteger)length;
- (void)connectorDidSetupFailed:(Connector * _Nonnull)connector withError:(NSError * _Nonnull)withError;
- (void)connectorDidBecomeAvailable:(Connector * _Nonnull)connector;
- (void)client_tcp_output;
- (void)client_tcp_received:(NSInteger)len;
- (void)client_socks_recv_initiate;
- (NSInteger)client_socks_recv_send_out;
- (void)client_sent_func;
- (void)client_socks_recv_handler_done:(NSInteger)len;
- (void)client_socks_send_handler_done:(NSInteger)len;
- (void)incomingData:(NSData * _Nonnull)d len:(NSInteger)len;
- (void)client_free_socks;
- (void)client_dealloc;
- (void)client_send_to_socks;
- (void)client_handle_freed_client;
- (NSString * _Nonnull)pcbStatus;
- (void)client_abort_client;
- (void)client_free_client;
- (void)close_lwip_pcb:(BOOL)abort;
- (void)client_murder;
@end

@class GCDAsyncUdpSocket;

SWIFT_CLASS("_TtC16PacketTunnel_iOS14SFDNSForwarder")
@interface SFDNSForwarder : OutgoingConnector <GCDAsyncUdpSocketDelegate>
@property (nonatomic, copy) NSArray<NSString *> * _Nonnull domains;
@property (nonatomic, strong) DNSPacket * _Nullable packet;
@property (nonatomic, strong) GCDAsyncUdpSocket * _Nullable socket;
@property (nonatomic, copy) NSArray<DNSPacket *> * _Nonnull queries;
@property (nonatomic) uint16_t queryIDCounter;
@property (nonatomic, copy) NSString * _Nonnull targetHost;
@property (nonatomic, readonly) uint16_t targetPort;
@property (nonatomic) BOOL connected;
@property (nonatomic, strong) NSDate * _Nonnull startTime;
@property (nonatomic, strong) NSMutableData * _Nullable cacheData;
- (nonnull instancetype)initWithServer:(NSString * _Nonnull)server OBJC_DESIGNATED_INITIALIZER;
- (BOOL)config;
- (NSData * _Nonnull)buildHead;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (void)start;
- (void)addQueryWithPacket:(UDPPacket * _Null_unspecified)udp;
- (void)processQuery;
- (void)udpSocket:(GCDAsyncUdpSocket * _Nonnull)sock didReceiveData:(NSData * _Nonnull)tempdata fromAddress:(NSData * _Nonnull)address withFilterContext:(id _Nullable)filterContext;
- (void)writeDNSPacketData:(NSData * _Nonnull)data cache:(BOOL)cache;
- (void)udpSocket:(GCDAsyncUdpSocket * _Nonnull)sock didNotConnect:(NSError * _Nonnull)error;
- (void)udpSocket:(GCDAsyncUdpSocket * _Nonnull)sock didSendDataWithTag:(NSInteger)tag;
- (void)udpSocketDidClose:(GCDAsyncUdpSocket * _Nonnull)sock withError:(NSError * _Nonnull)error;
- (void)udpSocket:(GCDAsyncUdpSocket * _Nonnull)sock didNotSendDataWithTag:(NSInteger)tag dueToError:(NSError * _Nonnull)error;
- (void)shutdownSocket;
@end


SWIFT_CLASS("_TtC16PacketTunnel_iOS13SFHTTPRequest")
@interface SFHTTPRequest : SFConnection
@property (nonatomic, strong) NSMutableData * _Nonnull headerData;
- (nonnull instancetype)initWithTcp:(SFPcb _Null_unspecified)tcp host:(uint32_t)host port:(uint16_t)port m:(SFTCPConnectionManager * _Nonnull)m OBJC_DESIGNATED_INITIALIZER;
- (void)processData:(NSString * _Nonnull)reason;
- (BOOL)httpArgu;
- (void)configConnector;
- (void)setUpConnector;
- (void)connector:(Connector * _Nonnull)connector didWriteDataWithTag:(int64_t)_tag;
- (void)sendCONNECTResponse;
- (BOOL)sendFakeCONNECTResponse;
@end


SWIFT_CLASS("_TtC16PacketTunnel_iOS16SFHTTPConnection")
@interface SFHTTPConnection : SFHTTPRequest
@property (nonatomic) NSInteger requestIndex;
@property (nonatomic, strong) NSMutableData * _Nonnull recvHeaderData;
@property (nonatomic) NSUInteger currentBodyLength;
@property (nonatomic) NSUInteger totalRecvLength;
@property (nonatomic) NSUInteger currentBobyReadLength;
@property (nonatomic, readonly, copy) NSString * _Nonnull statusString;
- (void)configLwip;
- (void)incomingData:(NSData * _Nonnull)d len:(NSInteger)len;
- (void)connect;
- (void)processData:(NSString * _Nonnull)reason;
- (void)client_send_to_socks;
- (void)connector:(Connector * _Nonnull)connector didReadData:(NSData * _Nonnull)data withTag:(int64_t)tag;
- (void)connector:(Connector * _Nonnull)connector didWriteDataWithTag:(int64_t)_tag;
- (void)client_socks_recv_initiate;
- (void)showLog;
- (void)checkStatus;
- (nonnull instancetype)initWithTcp:(SFPcb _Null_unspecified)tcp host:(uint32_t)host port:(uint16_t)port m:(SFTCPConnectionManager * _Nonnull)m OBJC_DESIGNATED_INITIALIZER;
@end



SWIFT_CLASS("_TtC16PacketTunnel_iOS17SFHTTPSConnection")
@interface SFHTTPSConnection : SFHTTPRequest
- (void)configLwip;
- (void)incomingData:(NSData * _Nonnull)d len:(NSInteger)len;
- (void)connect;
- (void)processData:(NSString * _Nonnull)reason;
- (void)client_send_to_socks;
- (void)connector:(Connector * _Nonnull)connector didReadData:(NSData * _Nonnull)data withTag:(int64_t)tag;
- (nonnull instancetype)initWithTcp:(SFPcb _Null_unspecified)tcp host:(uint32_t)host port:(uint16_t)port m:(SFTCPConnectionManager * _Nonnull)m OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC16PacketTunnel_iOS25SFNetworkInterfaceManager")
@interface SFNetworkInterfaceManager : NSObject
@property (nonatomic, copy) NSString * _Nonnull defaultIPAddress;
@property (nonatomic, copy) NSString * _Nonnull WiFiIPAddress;
@property (nonatomic, copy) NSString * _Nonnull WWANIPAddress;
+ (SFNetworkInterfaceManager * _Nonnull)instances;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (void)updateIPAddress;
- (void)showRouter;
- (NSInteger)interfaceMTUWithName:(NSString * _Nonnull)name;
@end


SWIFT_CLASS("_TtC16PacketTunnel_iOS15SFTCPConnection")
@interface SFTCPConnection : SFConnection
@property (nonatomic, strong) NSMutableData * _Nonnull headerData;
- (nonnull instancetype)initWithTcp:(SFPcb _Null_unspecified)tcp host:(uint32_t)host port:(uint16_t)port m:(SFTCPConnectionManager * _Nonnull)m OBJC_DESIGNATED_INITIALIZER;
- (void)configLwip;
- (void)configConnection;
- (void)setUpConnector;
- (void)incomingData:(NSData * _Nonnull)d len:(NSInteger)len;
- (void)processData:(NSString * _Nonnull)reason;
- (void)client_send_to_socks;
- (void)connector:(Connector * _Nonnull)connector didWriteDataWithTag:(int64_t)_tag;
- (void)connector:(Connector * _Nonnull)connector didReadData:(NSData * _Nonnull)data withTag:(int64_t)tag;
@end

@class SFUDPConnection;

SWIFT_CLASS("_TtC16PacketTunnel_iOS22SFTCPConnectionManager")
@interface SFTCPConnectionManager : NSObject
+ (SFTCPConnectionManager * _Nonnull)manager;
+ (SFTCPConnectionManager * _Nonnull)shared;
@property (nonatomic, strong) dispatch_queue_t _Nonnull dispatchQueue;
@property (nonatomic, strong) dispatch_queue_t _Nonnull socketQueue;
@property (nonatomic) dispatch_source_memorypressure_flags_t memoryWarninglevel;
@property (nonatomic, strong) NSDate * _Nonnull lastMemeoryWarningDate;
@property (nonatomic, weak) PacketTunnelProvider * _Nullable provider;
@property (nonatomic, copy) NSArray<SFUDPConnection *> * _Nonnull udp_connections;
@property (nonatomic) BOOL tcpOperating;
@property (nonatomic) BOOL lwip_init_finished;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (void)start;
- (void)checkConnectionStatus;
- (void)closeAllConnection;
- (void)setMTU:(NSInteger)mtu;
- (void)saveConnectionInfo:(SFConnection * _Nonnull)ref;
- (void)removeConnectionRef:(SFConnection * _Nonnull)ref;
- (void)writeDatagrams:(NSData * _Nonnull)data;
@end


@interface SFTCPConnectionManager (SWIFT_EXTENSION(PacketTunnel_iOS))
- (void)startProxyServer;
@end


@interface SFTCPConnectionManager (SWIFT_EXTENSION(PacketTunnel_iOS))
- (void)configUDP;
- (void)addUDPConnection:(SFUDPConnection * _Nonnull)c;
- (void)deleteUDP:(SFUDPConnection * _Nonnull)c;
- (void)incomingUDP:(SFUPcb _Null_unspecified)udp;
@end

@class NSTimer;

@interface SFTCPConnectionManager (SWIFT_EXTENSION(PacketTunnel_iOS))
- (void)installMemoryWarning;
- (void)recvMemoryWarning:(dispatch_source_memorypressure_flags_t)level;
- (void)cleanMemory;
- (void)incomingTCP:(SFPcb _Null_unspecified)tcp;
- (void)tcp_timer_handler:(NSTimer * _Nonnull)t;
- (void)cleanConnection;
- (void)cancel;
- (void)resume;
- (void)startWithInterval:(double)interval;
- (void)device_read_handler_sendPackets3:(void const * _Null_unspecified)unused packets:(NSArray<NSData *> * _Nonnull)packets complete:(void (^ _Nonnull)(NSError * _Nullable))complete;
- (void)device_read_handler_sendPackets:(void const * _Null_unspecified)unused packets:(NSArray<NSData *> * _Nonnull)packets;
- (void)clearRule;
- (void)device_read_handler_send:(void const * _Null_unspecified)unused data:(NSData * _Nonnull)data len:(NSInteger)len sport:(uint16_t)sport;
- (NSData * _Nonnull)recentRequestData;
- (NSData * _Nonnull)ruleResultData;
- (void)test;
- (BOOL)shouldReadPacket;
@end


SWIFT_CLASS("_TtC16PacketTunnel_iOS15SFUDPConnection")
@interface SFUDPConnection : TUNConnection
@property (nonatomic) SFUPcb _Null_unspecified pcb;
- (nonnull instancetype)initWithP:(SFUPcb _Null_unspecified)p host:(uint32_t)host port:(uint16_t)port OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC16PacketTunnel_iOS14SFUDPConnector")
@interface SFUDPConnector : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC16PacketTunnel_iOS20SFUDPDirectConnector")
@interface SFUDPDirectConnector : SFUDPConnector
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC16PacketTunnel_iOS19SFUDPProxyConnector")
@interface SFUDPProxyConnector : SFUDPConnector
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC16PacketTunnel_iOS12SFVPNSession")
@interface SFVPNSession : NSObject
+ (SFVPNSession * _Nonnull)session;
@property (nonatomic, strong) NSDate * _Nonnull startTime;
@property (nonatomic, strong) NSDate * _Nonnull endTime;
- (nonnull instancetype)initWithPath:(NSString * _Nonnull)path OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nonnull)idenString;
@end


SWIFT_PROTOCOL("_TtP16PacketTunnel_iOS14SocketDelegate_")
@protocol SocketDelegate
- (void)connector:(Connector * _Nonnull)connector didReadData:(NSData * _Nonnull)data withTag:(int64_t)tag;
- (void)connectorDidDisconnect:(Connector * _Nonnull)connector withError:(NSError * _Nonnull)withError;
- (void)connector:(Connector * _Nonnull)connector didWriteDataWithTag:(int64_t)tag;
- (void)connectorDidSetupFailed:(Connector * _Nonnull)connector withError:(NSError * _Nonnull)withError;
- (void)connectorDidBecomeAvailable:(Connector * _Nonnull)connector;
- (NSTimeInterval)connector:(Connector * _Nonnull)connector shouldTimeoutReadWithTag:(NSInteger)tag elapsed:(NSTimeInterval)elapsed bytesDone:(NSUInteger)length;
@end


SWIFT_CLASS("_TtC16PacketTunnel_iOS15Socks5Connector")
@interface Socks5Connector : ProxyConnector
@property (nonatomic, copy) NSString * _Nullable host;
@property (nonatomic) uint16_t port;
@property (nonatomic, strong) NSMutableData * _Nullable recvBuffer;
- (void)sendAuth;
- (void)sendUserAndPassword;
- (void)sendBind;
- (void)socket:(GCDAsyncSocket * _Null_unspecified)sock didConnectToHost:(NSString * _Null_unspecified)host port:(uint16_t)port;
- (void)socket:(GCDAsyncSocket * _Nonnull)sock didReadData:(NSData * _Nonnull)data withTag:(NSInteger)tag;
- (void)sock5connected;
- (void)socket:(GCDAsyncSocket * _Nonnull)sock didWriteDataWithTag:(NSInteger)tag;
- (void)socketDidCloseReadStream:(GCDAsyncSocket * _Null_unspecified)sock;
- (void)start;
- (void)writeData:(NSData * _Nonnull)d timemout:(double)timemout tag:(long)tag;
@end


SWIFT_CLASS("_TtC16PacketTunnel_iOS9TCPPacket")
@interface TCPPacket : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC16PacketTunnel_iOS14TCPSSConnector")
@interface TCPSSConnector : ProxyConnector
@property (nonatomic) BOOL ota;
@property (nonatomic) BOOL headSent;
- (BOOL)config;
- (NSData * _Nonnull)buildHead;
- (void)socket:(GCDAsyncSocket * _Null_unspecified)sock didConnectToHost:(NSString * _Null_unspecified)host port:(uint16_t)port;
- (void)socket:(GCDAsyncSocket * _Nonnull)sock didReadData:(NSData * _Nonnull)data withTag:(NSInteger)tag;
- (void)socket:(GCDAsyncSocket * _Nonnull)sock didWriteDataWithTag:(NSInteger)tag;
- (void)beginRead;
- (void)socket:(GCDAsyncSocket * _Null_unspecified)sock didWritePartialDataOfLength:(NSUInteger)partialLength tag:(NSInteger)tag;
- (void)socketDidCloseReadStream:(GCDAsyncSocket * _Null_unspecified)sock;
- (void)start;
- (void)writeData:(NSData * _Nonnull)d timeout:(double)timeout tag:(int64_t)tag;
@end



SWIFT_CLASS("_TtC16PacketTunnel_iOS9UDPPacket")
@interface UDPPacket : NSObject
@property (nonatomic) uint16_t sourcePort;
@property (nonatomic) uint16_t destinationPort;
@property (nonatomic, strong) NSData * _Nullable _rawData;
- (nonnull instancetype)initWithPacketData:(NSData * _Nonnull)PacketData OBJC_DESIGNATED_INITIALIZER;
- (NSData * _Nonnull)payloadData;
@end


SWIFT_CLASS("_TtC16PacketTunnel_iOS10UDPRelayer")
@interface UDPRelayer : OutgoingConnector <GCDAsyncUdpSocketDelegate>
@property (nonatomic, copy) NSArray<NSString *> * _Nonnull domains;
@property (nonatomic, strong) DNSPacket * _Nullable packet;
@property (nonatomic, strong) GCDAsyncUdpSocket * _Nullable socket;
@property (nonatomic, copy) NSArray<NSData *> * _Nonnull queries;
@property (nonatomic) uint16_t queryIDCounter;
@property (nonatomic, copy) NSString * _Nonnull targetHost;
@property (nonatomic) uint16_t targetPort;
@property (nonatomic) BOOL connected;
@property (nonatomic, strong) NSMutableData * _Nullable cacheData;
- (BOOL)setupSS;
- (BOOL)config;
- (NSData * _Nonnull)buildHead;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (void)start;
- (void)addQueryWithPacket:(UDPPacket * _Null_unspecified)udp;
- (void)processQuery;
- (void)udpSocket:(GCDAsyncUdpSocket * _Null_unspecified)sock didReceiveData:(NSData * _Null_unspecified)tempdata fromAddress:(NSData * _Null_unspecified)address withFilterContext:(id _Null_unspecified)filterContext;
- (void)writeDNSPacketData:(NSData * _Nonnull)data;
- (void)udpSocket:(GCDAsyncUdpSocket * _Nonnull)sock didNotConnect:(NSError * _Nonnull)error;
- (void)udpSocket:(GCDAsyncUdpSocket * _Nonnull)sock didSendDataWithTag:(NSInteger)tag;
- (void)udpSocketDidClose:(GCDAsyncUdpSocket * _Nonnull)sock withError:(NSError * _Nonnull)error;
- (void)udpSocket:(GCDAsyncUdpSocket * _Null_unspecified)sock didNotSendDataWithTag:(NSInteger)tag dueToError:(NSError * _Null_unspecified)error;
- (void)shutdownSocket;
@end


SWIFT_CLASS("_TtC16PacketTunnel_iOS14VmessConnector")
@interface VmessConnector : ProxyConnector
- (BOOL)config;
- (void)writeData:(NSData * _Nonnull)d timeout:(double)timeout tag:(int64_t)tag;
- (void)socket:(GCDAsyncSocket * _Null_unspecified)sock didReadData:(NSData * _Null_unspecified)data withTag:(NSInteger)tag;
@end

#pragma clang diagnostic pop
